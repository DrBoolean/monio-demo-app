/*! Monio: io.mjs
    v0.34.0-pre (c) 2022 Kyle Simpson
    MIT License: http://getify.mit-license.org
*/
import{isFunction,isPromise,isMonad,getMonadFlatMap}from"../lib/util.mjs";import Nothing from"../nothing.mjs";import Either from"../either.mjs";const BRAND={},IS_CONT=Symbol("is-continuation"),RUN_CONT=Symbol("return-continuation"),CONT_VAL=Symbol("continuation-value");export default Object.assign(IO,{of:of,pure:of,unit:of,is:is,do:$do,doEither:doEither,fromIOx:fromIOx,_IS_CONT:IS_CONT});export{IO as RIO};export{of};export{of as pure};export{of as unit};export{is};export{$do as do};export{doEither};export{fromIOx};export{IS_CONT as _IS_CONT};function IO(t){var n={map:function map(n){return IO((r=>continuation([()=>t(r),t=>isPromise(t)?t.then(n):n(t)])))},chain:chain,flatMap:chain,bind:chain,concat:function concat(n){return IO((r=>continuation([()=>t(r),t=>{var e=n.run(r);return isPromise(t)||isPromise(e)?Promise.all([t,e]).then((([t,n])=>t.concat(n))):t.concat(e)}])))},run:function run(n){return n&&!0===n[RUN_CONT]?t(n.env):trampoline(t(n))},_inspect:function _inspect(){return`${n[Symbol.toStringTag]}(${isFunction(t)?t.name||"anonymous function":String(t)})`},_is:function _is(t){return t===BRAND},[Symbol.toStringTag]:"IO"};return n;function chain(n){return IO((r=>continuation([()=>t(r),t=>{var e=isPromise(t)?t.then(n):n(t);return isPromise(e)?e.then((t=>t.run(r))):e.run(returnRunContinuation(r))}])))}}function of(t){return IO((()=>t))}function is(t){return!!(t&&isFunction(t._is)&&t._is(BRAND))}function processNext(t,n,r,e){return isPromise(n)?safeUnwrap(n,e).then((([t,n])=>trampoline(handleNextRespVal(t,n)))).catch((t=>trampoline(handleNextRespVal(t,"error")))):handleNextRespVal(n,e&&Either.Left.is(n)?"error":"value");function handleNextRespVal(n,i){var chainNextFn=n=>IO((()=>t(n,i))),o=Nothing.is(n)?IO.of():n&&isFunction(n)&&isFunction(n._chain_with_IO)&&isFunction(n._inspect)&&/^IOx\b/.test(n._inspect())?n._chain_with_IO(chainNextFn):monadFlatMap(e&&"error"==i&&Either.Left.is(n)||!isMonad(n)?IO.of(n):n,chainNextFn);return continuation([()=>o.run(returnRunContinuation(r)),t=>t])}}function $do(t,...n){return IO((r=>{var e=getIterator(t,r,this,n);return new Promise((t=>t(trampoline(next())))).catch((t=>trampoline(next(t,"error")))).catch(liftDoError);function next(t,n){try{var i="error"===n?e.throw(t):e.next(t);return isPromise(i)?i.then((t=>trampoline(handleResp(t)))):handleResp(i);function handleResp(t){return t.done?continuation([()=>{try{return IO.is(t.value)?t.value.run(returnRunContinuation(r)):t.value}catch(t){return liftDoError(t)}},t=>t]):processNext(next,t.value,r,!1)}}catch(t){return liftDoError(t)}}}))}function liftDoError(t){var n=Promise.reject(t);return n.catch((()=>{})),n}function doEither(t,...n){return IO((r=>{var e=getIterator(t,r,this,n);return new Promise((t=>t(trampoline(next())))).catch((t=>trampoline(next(t,"error")))).catch(liftDoEitherError);function next(t,n){t="error"!=n||Either.Left.is(t)?"value"!=n||Either.Right.is(t)?Either.is(t)?t:Either(t):Either.Right(t):Either.Left(t);try{let n=t.fold((t=>e.throw(t)),(t=>e.next(t)));return isPromise(n)?n.then((t=>trampoline(handleResp(t)))):handleResp(n);function handleResp(t){return t.done?continuation([()=>{try{return IO.is(t.value)?t.value.run(returnRunContinuation(r)):t.value}catch(t){return liftDoEitherError(t)}},t=>isPromise(t)?t.then(handleRespVal):handleRespVal(t)]):processNext(next,t.value,r,!0)}function handleRespVal(t){return Either.Right.is(t)?t:Either.Left.is(t)?liftDoEitherError(t):Either.Right(t)}}catch(t){return liftDoEitherError(t)}}}))}function liftDoEitherError(t){t=isPromise(t)||Either.Left.is(t)?t:Either.Left(t);var n=Promise.reject(t);return n.catch((()=>{})),n}function fromIOx(t){return IO((n=>continuation([()=>t.run(n),t=>t])))}function getIterator(t,n,r,e){return isFunction(t)?t.call(r,n,...e):t&&isFunction(t.next)?t:void 0}function monadFlatMap(t,n){return getMonadFlatMap(t).call(t,n)}async function safeUnwrap(t,n){try{if(t=await t,n&&Either.Left.is(t))throw t;return[t,"value"]}catch(t){return[t,"error"]}}function continuation(t){return t[IS_CONT]=!0,t}function returnRunContinuation(t){return{[RUN_CONT]:!0,env:t}}function trampoline(t){var n=[];t:for(;Array.isArray(t)&&!0===t[IS_CONT];){let r=(0,t[0])();if(t[0]=r,n.push(t),Array.isArray(r)&&r[IS_CONT])t=r;else for(t=n[n.length-1][0];n.length>0;){let[,r]=n.pop();if(t=r(t),Array.isArray(t)&&!0===t[IS_CONT])continue t}}return t}