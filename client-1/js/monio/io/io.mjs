/*! Monio: io.mjs
    v0.33.0 (c) 2022 Kyle Simpson
    MIT License: http://getify.mit-license.org
*/
import{isFunction,isPromise,isMonad,getMonadFlatMap}from"../lib/util.mjs";import Nothing from"../nothing.mjs";import Either from"../either.mjs";const BRAND={};export default Object.assign(IO,{of:of,pure:of,unit:of,is:is,do:$do,doEither:doEither,fromIOx:fromIOx});export{IO as RIO};export{of};export{of as pure};export{of as unit};export{is};export{$do as do};export{doEither};export{fromIOx};function IO(t){var r={map:function map(r){return IO((i=>{var n=t(i);return isPromise(n)?n.then(r):r(n)}))},chain:chain,flatMap:chain,bind:chain,concat:function concat(r){return IO((i=>{var n=t(i),e=r.run(i);return isPromise(n)||isPromise(e)?Promise.all([n,e]).then((([t,r])=>t.concat(r))):n.concat(e)}))},run:function run(r){return t(r)},_inspect:function _inspect(){return`${r[Symbol.toStringTag]}(${isFunction(t)?t.name||"anonymous function":String(t)})`},_is:function _is(t){return t===BRAND},[Symbol.toStringTag]:"IO"};return r;function chain(r){return IO((i=>{var n=t(i),e=isPromise(n)?n.then(r):r(n);return isPromise(e)?e.then((t=>t.run(i))):e.run(i)}))}}function of(t){return IO((()=>t))}function is(t){return!!(t&&isFunction(t._is)&&t._is(BRAND))}function processNext(t,r,i,n){return new Promise((async function c(e,o){try{let[a,s]=isPromise(r)?await safeUnwrap(r,n):[r,n&&Either.Left.is(r)?"error":"value"],chainNextFn=r=>IO((()=>t(r,s).then(e,o))),u=Nothing.is(a)?IO((()=>e())):a&&isFunction(a)&&isFunction(a._chain_with_IO)&&isFunction(a._inspect)&&/^IOx\b/.test(a._inspect())?a._chain_with_IO(chainNextFn):monadFlatMap(n&&"error"==s&&Either.Left.is(a)||!isMonad(a)?IO.of(a):a,chainNextFn);try{await u.run(i)}catch(r){e(await t(r,"error"))}}catch(t){o(t)}}))}function $do(t,...r){return IO((i=>{var n=getIterator(t,i,this,r);return async function next(t,r){var e="error"===r?n.throw(t):n.next(t);return(e=isPromise(e)?await e:e).done?IO.is(e.value)?e.value.run(i):e.value:processNext(next,e.value,i,!1)}()}))}function doEither(t,...r){return IO((i=>{var n=getIterator(t,i,this,r);return async function next(t,r){t="error"!=r||Either.Left.is(t)?"value"!=r||Either.Right.is(t)?Either.is(t)?t:Either(t):Either.Right(t):Either.Left(t);try{let r=t.fold((t=>n.throw(t)),(t=>n.next(t)));if(r=isPromise(r)?await r:r,r.done){let t=isPromise(r.value)?await r.value:r.value;if(t=IO.is(t)?t.run(i):t,t=isPromise(t)?await t:t,Either.Left.is(t))throw t;return Either.Right.is(t)?t:Either.Right(t)}return processNext(next,r.value,i,!0)}catch(t){throw Either.Left.is(t)?t:Either.Left(t)}}()}))}function fromIOx(t){return IO((r=>t.run(r)))}function getIterator(t,r,i,n){return isFunction(t)?t.call(i,r,...n):t&&isFunction(t.next)?t:void 0}function monadFlatMap(t,r){return getMonadFlatMap(t).call(t,r)}async function safeUnwrap(t,r){try{if(t=isPromise(t)?await t:t,r&&Either.Left.is(t))throw t;return[t,"value"]}catch(t){return[t,"error"]}}