/*! Monio: either.mjs
    v0.33.0 (c) 2022 Kyle Simpson
    MIT License: http://getify.mit-license.org
*/
import{isFunction}from"./lib/util.mjs";import Just from"./just.mjs";const BRAND={};Left.is=LeftIs,Right.is=RightIs;export default Object.assign(Either,{Left:Left,Right:Right,of:Right,pure:Right,unit:Right,is:is,fromFoldable:fromFoldable});function Left(t){return LeftOrRight(t,!1)}function LeftIs(t){return is(t)&&!t._is_right()}function Right(t){return LeftOrRight(t,!0)}function RightIs(t){return is(t)&&t._is_right()}function Either(t){return LeftOrRight(t,!0)}function LeftOrRight(t,i=!0){var n={map:function map(r){return i?LeftOrRight(r(t),i):n},chain:chain,flatMap:chain,bind:chain,ap:function ap(r){return i?r.map(t):n},concat:function concat(r){return i?r.map((i=>t.concat(i))):n},fold:function fold(n,r){return i?r(t):n(t)},_inspect:function _inspect(){var i=Just(t)._inspect().match(/^Just\((.*)\)$/)[1];return`${n[Symbol.toStringTag]}(${i})`},_is:function _is(t){return t===BRAND},_is_right:function _is_right(){return i},get[Symbol.toStringTag](){return"Either:"+(i?"Right":"Left")}};return n;function chain(r){return i?r(t):n}}function is(t){return!!(t&&isFunction(t._is)&&t._is(BRAND))}function fromFoldable(t){return t.fold(Left,Right)}