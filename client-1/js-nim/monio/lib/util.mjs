/*! Monio: util.mjs
    v0.34.0-pre (c) 2022 Kyle Simpson
    MIT License: http://getify.mit-license.org
*/
const IS_CONT=Symbol("is-continuation"),RUN_CONT=Symbol("return-continuation"),CONT_VAL=Symbol("continuation-value"),EMPTY_FUNC=()=>{},EMPTY_SLOT=Object.freeze(Object.create(null)),builtInFunctions=Object.freeze(new Set([Function.prototype.bind,Array.prototype.flatMap,Set.prototype.flatMap,function*(){}().flatMap,async function*(){}().flatMap].filter(isFunction)));var continuationPool=[],nextFreeSlot=0;__GROW_CONTINUATION_POOL(100),fold=curry(fold,2),foldMap=curry(foldMap,2);export default{EMPTY_FUNC:EMPTY_FUNC,identity:identity,getMonadFlatMap:getMonadFlatMap,isMonad:isMonad,liftM:liftM,isFunction:isFunction,isPromise:isPromise,curry:curry,fold:fold,foldMap:foldMap,getDeferred:getDeferred,__GROW_CONTINUATION_POOL:__GROW_CONTINUATION_POOL,__EMPTY_CONTINUATION_POOL:__EMPTY_CONTINUATION_POOL,continuation:continuation,runSignal:runSignal,isRunSignal:isRunSignal,trampoline:trampoline};export{EMPTY_FUNC};export{identity};export{getMonadFlatMap};export{isMonad};export{liftM};export{isFunction};export{isPromise};export{curry};export{fold};export{foldMap};export{getDeferred};export{__GROW_CONTINUATION_POOL};export{__EMPTY_CONTINUATION_POOL};export{continuation};export{runSignal};export{isRunSignal};export{trampoline};function identity(n){return n}function getMonadFlatMap(n){var t=n.flatMap||n.chain||n.bind;return isFunction(t)?t:void 0}function isMonad(n){var t=n&&("object"==typeof n||isFunction(n))?getMonadFlatMap(n):void 0;return!(!t||builtInFunctions.has(t)||(t.toString()||"").includes("[native code]")&&!(t.name||"").startsWith("bound"))}function liftM(n){return isMonad(n)?n:Just(n)}function isFunction(n){return!(!n||"function"!=typeof n)}function isPromise(n){return!(!n||!isFunction(n.then))}function curry(n,t=n.length){return function nextCurried(o){return(...e)=>{var i=[...o,...e];return i.length>=t?n(...i):nextCurried(i)}}([])}function fold(n,t){return n.concat(t)}function foldMap(n,t,o){return o?t.reduce(((t,o)=>fold(t,n(o))),o):t.length>0?t.slice(1).reduce(((t,o)=>fold(t,n(o))),n(t[0])):void 0}function getDeferred(){var n;return{pr:new Promise((t=>n=t)),next:n}}function continuation(n,t){var o=getContinuation();return arguments.length>1?(o[0]=n,o[1]=t):1==arguments.length&&(o[0]=n),o}function runSignal(n){return isRunSignal(n)?n:{[RUN_CONT]:!0,env:n}}function isRunSignal(n){return n&&!0===n[RUN_CONT]}function trampoline(n){var t=[];n:for(;Array.isArray(n)&&!0===n[IS_CONT];){let o=(0,n[0])();if(n[0]=o,t.push(n),Array.isArray(o)&&o[IS_CONT])n=o;else for(n=t[t.length-1][0];t.length>0;){let o=t.pop(),e=o[1];if(recycleContinuation(o),isFunction(e)&&(n=e(n),Array.isArray(n)&&!0===n[IS_CONT]))continue n}}return n}function getContinuation(){nextFreeSlot==continuationPool.length&&__GROW_CONTINUATION_POOL(continuationPool.length||100);var n=continuationPool[nextFreeSlot];return continuationPool[nextFreeSlot++]=EMPTY_SLOT,n}function recycleContinuation(n){n.length=0,continuationPool[--nextFreeSlot]=n}function __GROW_CONTINUATION_POOL(n){n=Math.max(1,n);var t=continuationPool.length;continuationPool.length+=n;for(let n=t;n<continuationPool.length;n++){let t=[];t[IS_CONT]=!0,continuationPool[n]=t}}function __EMPTY_CONTINUATION_POOL(){continuationPool.length=nextFreeSlot=0}