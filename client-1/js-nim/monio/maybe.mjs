/*! Monio: maybe.mjs
    v0.34.0-pre (c) 2022 Kyle Simpson
    MIT License: http://getify.mit-license.org
*/
import{identity,isFunction}from"./lib/util.mjs";import Just from"./just.mjs";import Nothing from"./nothing.mjs";const BRAND={};Object.assign(MaybeJust,Just),Object.assign(MaybeNothing,Nothing);export default Object.assign(Maybe,{Just:MaybeJust,Nothing:MaybeNothing,of:Maybe,pure:Maybe,unit:Maybe,is:is,from:from});function MaybeJust(t){return Maybe(t)}function MaybeNothing(){return Maybe(Nothing())}function Maybe(t){var n=t,i=MaybeJust.is(n)&&!is(n),o=MaybeNothing.is(n)&&!is(n);i||o?t=i?n.fold(identity):void 0:(n=Just(t),i=!0);var a={map:function map(t){return i?Maybe(n.map(t)):a},chain:chain,flatMap:chain,bind:chain,ap:function ap(n){return i?n.map(t):a},concat:function concat(n){return i?n.map((n=>t.concat(n))):a},fold:function fold(n,o){return i?o(t):n(t)},_inspect:function _inspect(){var t=i?n._inspect().match(/^Just\((.*)\)$/)[1]:"";return`${a[Symbol.toStringTag]}(${t})`},_is:function _is(t){return!(t!==BRAND&&!n._is(t))},get[Symbol.toStringTag](){return`Maybe:${n[Symbol.toStringTag]}`}};return a;function chain(t){return i?n.chain(t):a}}function is(t){return!!(t&&isFunction(t._is)&&t._is(BRAND))}function from(t){return MaybeNothing.isEmpty(t)?MaybeNothing():Maybe(t)}